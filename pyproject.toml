[build-system]
requires = ["setuptools>=60", "setuptools-scm>=8.0"]

[tool.setuptools_scm]
version_file="_version.py"

[tool.black]
line-length = 95
target-version = ["py311"]
extend-exclude = '''^(.*\/)*\b(migrations)\b($|\/.*$)'''

[tool.isort]
profile = "black"
py_version = "311"
skip = [".tox", ".eggs", "migrations"]

[tool.coverage.run]
parallel = false
branch = true
source = ["edc_auth"]

[tool.coverage.paths]
source = ["edc_auth"]

[tool.coverage.report]
show_missing = true
skip_covered = true
omit = ["requirements.txt"]
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist =
    py{311}-dj{42,dev},
    lint

isolated_build = true

[gh-actions]
python =
    3.11: py311, lint

[gh-actions:env]
DJANGO =
    4.2: dj42, lint
    dev: djdev

[testenv]
deps =
    -r https://raw.githubusercontent.com/clinicedc/edc/develop/requirements.tests/tox.txt
    -r https://raw.githubusercontent.com/clinicedc/edc/develop/requirements.tests/test_utils.txt
    -r https://raw.githubusercontent.com/clinicedc/edc/develop/requirements.tests/edc.txt
    -r https://raw.githubusercontent.com/clinicedc/edc/develop/requirements.tests/third_party_dev.txt
    dj42: Django>=4.2,<5.0
    djdev: https://github.com/django/django/tarball/main

commands =
    pip install -U pip coverage[toml]
    pip --version
    pip freeze
    coverage run -a runtests.py
    coverage report

[testenv:lint]
deps = -r https://raw.githubusercontent.com/clinicedc/edc/develop/requirements.tests/lint.txt
commands =
    isort --profile=black --check --diff .
    black --check --diff .
    flake8 .
"""
